@page "/products/edit/{id}"
@inject ENAEBLazor.ProductService.ProductService _productService
@inject NavigationManager NavigationManager

<div class="container">
    <h3 class="text-center my-4">Editar Producto</h3>

    @if (product != null)
    {
        <EditForm Model="product" OnValidSubmit="UpdateProduct">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Nombre</label>
                <InputText class="form-control" @bind-Value="product.NombreENAE" />
            </div>
            <div class="form-group">
                <label>Descripción</label>
                <InputText class="form-control" @bind-Value="product.DescripcionENAE" />
            </div>
            <div class="form-group">
                <label>Precio</label>
                <InputNumber class="form-control" @bind-Value="product.PrecioENAE" />
            </div>

            <button type="submit" class="btn btn-warning">Actualizar</button>
        </EditForm>
    }
    else
    {
        <p class="text-center">Cargando detalles del producto...</p>
    }
</div> <!-- Closing the container div -->
@code {
    [Parameter] public string id { get; set; }
    private Product product;

    protected override async Task OnInitializedAsync()
    {
        product = await _productService.GetProductById(id);
    }

    private async Task UpdateProduct()
    {
        var response = await _productService.UpdateProduct(product._Id, product);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/products");
        }
        else
        {
            Console.WriteLine("Error al actualizar el producto");
            // You might want to add a notification for the user
        }
    }
}
