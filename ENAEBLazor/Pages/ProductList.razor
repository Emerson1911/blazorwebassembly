@page "/products"
@inject ENAEBLazor.ProductService.ProductService _productService
@using ENAEBLazor.ProductService

<div class="container">
    <h3 class="text-center my-4">Lista de Productos</h3>

    <ul class="list-group">
        @if (products != null && products.Count > 0)
        {
            foreach (var product in products)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a href="/products/details/@product._Id" class="text-decoration-none">
                        @product.NombreENAE - @product.PrecioENAE
                    </a>
                    <div>
                        <button class="btn btn-danger btn-sm mx-1" @onclick="() => DeleteProduct(product._Id)">Eliminar</button>
                        <a href="/products/edit/@product._Id" class="btn btn-warning btn-sm">Editar</a>
                    </div>
                </li>
            }
        }
        else
        {
            <p class="text-center">Cargando productos...</p>
        }
    </ul>
</div>

@code {
    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await _productService.GetAllProducts();
    }

    private async Task DeleteProduct(string id)
    {
        var response = await _productService.DeleteProduct(id);
        if (response.IsSuccessStatusCode)
        {
            products = await _productService.GetAllProducts();  // Refresh the list
        }
        else
        {
            Console.WriteLine("Error al eliminar el producto");
            // Consider adding a user notification here
        }
    }
}
